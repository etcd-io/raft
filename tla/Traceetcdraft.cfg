\* Copyright 2024 The etcd Authors
\*
\* Licensed under the Apache License, Version 2.0 (the "License");
\* you may not use this file except in compliance with the License.
\* You may obtain a copy of the License at
\*
\*     http://www.apache.org/licenses/LICENSE-2.0
\*
\* Unless required by applicable law or agreed to in writing, software
\* distributed under the License is distributed on an "AS IS" BASIS,
\* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
\* See the License for the specific language governing permissions and
\* limitations under the License.
\*

\* A trace specification defines a set of one or more traces, wherein the value of some
\* variables in each state aligns with the values specified on the corresponding line
\* of the log or trace file. Commonly, the log file might be incomplete, failing to
\* provide the value of all variables. In such instances, the omitted values are
\* determined non-deterministically, adhering to the high-level specification's parameters.
\* Furthermore, a trace may not be complete such that it only matches a prefix of the log.
SPECIFICATION
    TraceSpec

VIEW
    TraceView

\* TLA has only limited support for hyperproperties.  The following property is a poorman's
\* hyperproperty that asserts that TLC generated *at least one* trace that fully matches the
\* log file. 
PROPERTIES
    TraceMatched

PROPERTIES 
    etcdSpec

\* Checking for deadlocks during trace validation is disabled, as it may lead to false
\* counterexamples. A trace specification defines a set of traces, where at least one
\* trace is expected to match the log file in terms of variable values and length.
\* However, partial matches may occur where the trace cannot be extended to fully
\* correspond with the log file. In such cases, deadlock checking would report the first
\* of these traces.
CHECK_DEADLOCK
    FALSE

CONSTANTS
    Nil         = "0"
    
    ValueEntry  = "ValueEntry"
    ConfigEntry = "ConfigEntry"

    Follower    = "StateFollower"
    Candidate   = "StateCandidate"
    Leader      = "StateLeader"
    RequestVoteRequest      =   "RequestVoteRequest"
    RequestVoteResponse     =   "RequestVoteResponse"
    AppendEntriesRequest    =   "AppendEntriesRequest"
    AppendEntriesResponse   =   "AppendEntriesResponse"

    InitServerVars  <- TraceInitServerVars
    InitLogVars     <- TraceInitLogVars
    InitConfigVars  <- TraceInitConfigVars

    InitServer <- TraceInitServer
    Server <- TraceServer

INVARIANTS
    LogInv
    MoreThanOneLeaderInv
    ElectionSafetyInv
    LogMatchingInv
    QuorumLogInv
    MoreUpToDateCorrectInv
    LeaderCompletenessInv
    CommittedIsDurableInv